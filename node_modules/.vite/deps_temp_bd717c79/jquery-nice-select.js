// node_modules/jquery-nice-select/js/jquery.nice-select.min.js
!function(e) {
  e.fn.niceSelect = function(t) {
    function s(t2) {
      t2.after(e("<div></div>").addClass("nice-select").addClass(t2.attr("class") || "").addClass(t2.attr("disabled") ? "disabled" : "").attr("tabindex", t2.attr("disabled") ? null : "0").html('<span class="current"></span><ul class="list"></ul>'));
      var s2 = t2.next(), n2 = t2.find("option"), i = t2.find("option:selected");
      s2.find(".current").html(i.data("display") || i.text()), n2.each(function(t3) {
        var n3 = e(this), i2 = n3.data("display");
        s2.find("ul").append(e("<li></li>").attr("data-value", n3.val()).attr("data-display", i2 || null).addClass("option" + (n3.is(":selected") ? " selected" : "") + (n3.is(":disabled") ? " disabled" : "")).html(n3.text()));
      });
    }
    if ("string" == typeof t) return "update" == t ? this.each(function() {
      var t2 = e(this), n2 = e(this).next(".nice-select"), i = n2.hasClass("open");
      n2.length && (n2.remove(), s(t2), i && t2.next().trigger("click"));
    }) : "destroy" == t ? (this.each(function() {
      var t2 = e(this), s2 = e(this).next(".nice-select");
      s2.length && (s2.remove(), t2.css("display", ""));
    }), 0 == e(".nice-select").length && e(document).off(".nice_select")) : console.log('Method "' + t + '" does not exist.'), this;
    this.hide(), this.each(function() {
      var t2 = e(this);
      t2.next().hasClass("nice-select") || s(t2);
    }), e(document).off(".nice_select"), e(document).on("click.nice_select", ".nice-select", function(t2) {
      var s2 = e(this);
      e(".nice-select").not(s2).removeClass("open"), s2.toggleClass("open"), s2.hasClass("open") ? (s2.find(".option"), s2.find(".focus").removeClass("focus"), s2.find(".selected").addClass("focus")) : s2.focus();
    }), e(document).on("click.nice_select", function(t2) {
      0 === e(t2.target).closest(".nice-select").length && e(".nice-select").removeClass("open").find(".option");
    }), e(document).on("click.nice_select", ".nice-select .option:not(.disabled)", function(t2) {
      var s2 = e(this), n2 = s2.closest(".nice-select");
      n2.find(".selected").removeClass("selected"), s2.addClass("selected");
      var i = s2.data("display") || s2.text();
      n2.find(".current").text(i), n2.prev("select").val(s2.data("value")).trigger("change");
    }), e(document).on("keydown.nice_select", ".nice-select", function(t2) {
      var s2 = e(this), n2 = e(s2.find(".focus") || s2.find(".list .option.selected"));
      if (32 == t2.keyCode || 13 == t2.keyCode) return s2.hasClass("open") ? n2.trigger("click") : s2.trigger("click"), false;
      if (40 == t2.keyCode) {
        if (s2.hasClass("open")) {
          var i = n2.nextAll(".option:not(.disabled)").first();
          i.length > 0 && (s2.find(".focus").removeClass("focus"), i.addClass("focus"));
        } else s2.trigger("click");
        return false;
      }
      if (38 == t2.keyCode) {
        if (s2.hasClass("open")) {
          var l = n2.prevAll(".option:not(.disabled)").first();
          l.length > 0 && (s2.find(".focus").removeClass("focus"), l.addClass("focus"));
        } else s2.trigger("click");
        return false;
      }
      if (27 == t2.keyCode) s2.hasClass("open") && s2.trigger("click");
      else if (9 == t2.keyCode && s2.hasClass("open")) return false;
    });
    var n = document.createElement("a").style;
    return n.cssText = "pointer-events:auto", "auto" !== n.pointerEvents && e("html").addClass("no-csspointerevents"), this;
  };
}(jQuery);
//# sourceMappingURL=jquery-nice-select.js.map
